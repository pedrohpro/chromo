compo_df <- compo_df %>%
mutate(
compo = case_when(
chromoObject@composition$score_method %in% c("hyp","hyp_padj") ~ -log10(compo),
TRUE ~ compo
)
) %>%
mutate(
proportion = (compo/max(compo) * (max(abs(aux[[fc_col]])))), )
compo_df <- compo_df %>%
mutate(
proportion = (compo/max_compo * (max(abs(aux[[fc_col]])))),
proportion = case_when(
!!sym(alteration) == "UP" ~ proportion,
!!sym(alteration) == "DOWN" ~ -proportion,
TRUE ~ proportion
),
compo = case_when(
chromoObject@composition$score_method %in% c("hyp","hyp_padj") ~ ifelse(compo > -log10(0.001),"***",ifelse(compo > -log10(0.01),"**",ifelse(compo > -log10(0.05),"*",""))),
TRUE ~ paste0(round(compo, 1), "%")
),
y_axis = case_when(
!!sym(alteration) == "UP" ~ 1.2 * max(aux[[fc_col]]),
!!sym(alteration) == "DOWN" ~ 1.2 * min(aux[[fc_col]]),
TRUE ~ NA
),
color = case_when(
!!sym(alteration) == "UP" ~ color_score_up,
!!sym(alteration) == "DOWN" ~ color_score_down,
TRUE ~ NA
)
)
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::install()
devtools::install()
devtools::install()
devtools::document()  # if using roxygen2
devtools::install()
devtools::document()  # if using roxygen2
devtools::install()
rmarkdown::render(
input = "inst/doc/vignette.Rmd",   # Path to the Rmd file
output_file = "vignette.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
system.file("doc", "GSE190125_DS.tsv", package = "chromo")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
system.file("doc", "GSE190125_DS.tsv", package = "chromo")
remotes::install_github("pedrohpro/chromo")
system.file("doc", "GSE190125_DS.tsv", package = "chromo")
rmarkdown::render(
input = "inst/doc/vignette.Rmd",   # Path to the Rmd file
output_file = "vignette.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/vignette.Rmd",   # Path to the Rmd file
output_file = "vignette.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/vignette.Rmd",   # Path to the Rmd file
output_file = "vignette.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
output_dir = "inst/doc",           # Save inside inst/doc/
output_format = "html_document"
)
rmarkdown::render(
input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
output_file = "documentation.html",     # Output filename
)
rmarkdown::render(
+ input = "inst/doc/documentation.Rmd",   # Path to the Rmd file
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
rmarkdown::render(input = "inst/doc/vignette.Rmd", output_file = "vignette.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
remotes::install_github("pedrohpro/chromo")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
dir
dirname()
getwd
getwd()
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
rmarkdown::render(input = "inst/doc/documentation.Rmd", output_file = "documentation.html")
